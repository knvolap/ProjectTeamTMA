// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTeamTMA.DBContexts;

namespace ProjectTeamTMA.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20210806145728_DBInit4")]
    partial class DBInit4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("ProjectTeamTMA.Model.BookRoom", b =>
                {
                    b.Property<int>("bookRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("datetime");

                    b.Property<string>("issue")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("personBookingId")
                        .HasColumnType("int");

                    b.Property<int>("personalApprovedId")
                        .HasColumnType("int");

                    b.Property<int>("roomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("startDay")
                        .HasColumnType("datetime");

                    b.Property<ulong?>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime");

                    b.HasKey("bookRoomId")
                        .HasName("PK_BookRooms");

                    b.HasIndex("personBookingId");

                    b.HasIndex("roomId")
                        .IsUnique();

                    b.ToTable("BookRoom");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("buildingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_Buildings");

                    b.ToTable("Building");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            buildingName = "Toàn nhà 1",
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            buildingName = "Toàn nhà 2",
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            buildingName = "Toàn nhà 3",
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Floor", b =>
                {
                    b.Property<int>("floorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("buildingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime");

                    b.Property<string>("floorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime");

                    b.HasKey("floorId")
                        .HasName("PK_Floors");

                    b.HasIndex("buildingId");

                    b.ToTable("Floor");

                    b.HasData(
                        new
                        {
                            floorId = 1,
                            buildingId = 1,
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            floorName = "Tầng 1",
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            floorId = 2,
                            buildingId = 1,
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            floorName = "Tầng 2",
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            floorId = 3,
                            buildingId = 1,
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            floorName = "Tầng 3",
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            floorId = 4,
                            buildingId = 2,
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            floorName = "Tầng 1",
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            floorId = 5,
                            buildingId = 2,
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            floorName = "Tầng 2",
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            floorId = 6,
                            buildingId = 2,
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            floorName = "Tầng 3",
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Role", b =>
                {
                    b.Property<int>("roleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime");

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("char(100)");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime");

                    b.HasKey("roleID")
                        .HasName("PK_IdRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Room", b =>
                {
                    b.Property<int>("roomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfBeds")
                        .HasColumnType("int");

                    b.Property<string>("area")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime");

                    b.Property<int>("floorId")
                        .HasColumnType("int");

                    b.Property<string>("roomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<ulong?>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime");

                    b.HasKey("roomId")
                        .HasName("PK_Rooms");

                    b.HasIndex("floorId");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            roomId = 1,
                            NumberOfBeds = 2,
                            area = "40m2",
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            floorId = 1,
                            roomName = "A111",
                            status = 1ul,
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            roomId = 2,
                            NumberOfBeds = 2,
                            area = "40m2",
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            floorId = 1,
                            roomName = "A112",
                            status = 1ul,
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            roomId = 3,
                            NumberOfBeds = 2,
                            area = "40m2",
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            floorId = 1,
                            roomName = "A212",
                            status = 1ul,
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            roomId = 4,
                            NumberOfBeds = 2,
                            area = "40m2",
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            floorId = 1,
                            roomName = "A212",
                            status = 1ul,
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("passWord")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<ulong?>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("userId")
                        .HasName("PK_Users");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            address = "Bình Định",
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Võ Lập",
                            passWord = "123123",
                            phone = 37516333,
                            role = "Admin",
                            status = 1ul,
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            userName = "knvolap"
                        },
                        new
                        {
                            userId = 2,
                            address = "Bình Định",
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Văn Tính",
                            passWord = "123123",
                            phone = 37516444,
                            role = "User",
                            status = 1ul,
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            userName = "vantinh"
                        },
                        new
                        {
                            userId = 3,
                            address = "Đà Nẵng",
                            createdTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Thanh Thảo",
                            passWord = "123123",
                            phone = 37516555,
                            role = "User",
                            status = 1ul,
                            updatedTime = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            userName = "thanhthao"
                        });
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.BookRoom", b =>
                {
                    b.HasOne("ProjectTeamTMA.Model.User", "Users")
                        .WithMany("BookRooms")
                        .HasForeignKey("personBookingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProjectTeamTMA.Model.Room", "Rooms")
                        .WithOne("BookRooms")
                        .HasForeignKey("ProjectTeamTMA.Model.BookRoom", "roomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Floor", b =>
                {
                    b.HasOne("ProjectTeamTMA.Model.Building", "Buildings")
                        .WithMany("Floors")
                        .HasForeignKey("buildingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Room", b =>
                {
                    b.HasOne("ProjectTeamTMA.Model.Floor", "Floors")
                        .WithMany("Rooms")
                        .HasForeignKey("floorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Floors");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Building", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Floor", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Room", b =>
                {
                    b.Navigation("BookRooms");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.User", b =>
                {
                    b.Navigation("BookRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
