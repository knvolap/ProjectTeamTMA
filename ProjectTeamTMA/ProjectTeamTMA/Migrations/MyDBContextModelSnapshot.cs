// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTeamTMA.DBContexts;

namespace ProjectTeamTMA.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("ProjectTeamTMA.Model.BookRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("endTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("issue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("personBookingId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("personalApprovedId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("roomId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("startDay")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("startTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("PK_BookRooms");

                    b.HasIndex("personBookingId");

                    b.HasIndex("roomId");

                    b.ToTable("BookRoom");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("buildingName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("PK_Buildings");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Floor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("buildingId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("floorName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("PK_Floors");

                    b.HasIndex("buildingId");

                    b.ToTable("Floor");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("roleName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("PK_IdRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("NumberOfBeds")
                        .HasColumnType("int");

                    b.Property<string>("area")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("floorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("roomName")
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("PK_Rooms");

                    b.HasIndex("floorId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("passWord")
                        .HasColumnType("longtext");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<Guid>("roleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userName")
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("PK_Users");

                    b.HasIndex("roleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.BookRoom", b =>
                {
                    b.HasOne("ProjectTeamTMA.Model.User", "Users")
                        .WithMany("BookRooms")
                        .HasForeignKey("personBookingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProjectTeamTMA.Model.Room", "Rooms")
                        .WithMany("BookRooms")
                        .HasForeignKey("roomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Floor", b =>
                {
                    b.HasOne("ProjectTeamTMA.Model.Building", "Buildings")
                        .WithMany("Floors")
                        .HasForeignKey("buildingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Room", b =>
                {
                    b.HasOne("ProjectTeamTMA.Model.Floor", "Floors")
                        .WithMany("Rooms")
                        .HasForeignKey("floorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Floors");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.User", b =>
                {
                    b.HasOne("ProjectTeamTMA.Model.Role", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Building", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Floor", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.Room", b =>
                {
                    b.Navigation("BookRooms");
                });

            modelBuilder.Entity("ProjectTeamTMA.Model.User", b =>
                {
                    b.Navigation("BookRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
